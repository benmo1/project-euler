<?php

namespace MorrisPhp\ProjectEuler\Solution;

use MorrisPhp\ProjectEuler\SolutionInterface;

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
class EvenFibbonacciNumbers implements SolutionInterface
{
    const LIMIT = 4000000;

    public function calculate()
    {
        // vector for efficiency
        // dont need to keep reassigning n to n-1 and n-1 to n-2
        // only need to store 3 variables worth in memory
        $v = [1, 1, 2];

        $sum = 0;
        for (
            $i = 2, $next = $v[$i % 3];
            $next <= self::LIMIT;
            $next = $v[++$i % 3] = $v[($i - 1) % 3] + $v[($i - 2) % 3]
        ) {
            if (!($next % 2)) {
                $sum += $next;
            }
        }

        return $sum;
    }
}
